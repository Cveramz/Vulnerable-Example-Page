name: Nikto Analysis

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  nikto-scan:
    runs-on: ubuntu-latest

    steps:
    # Verifica el repositorio
    - name: Checkout code
      uses: actions/checkout@v3

    # Configura Python e instala dependencias
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r Backend/requirements.txt

    # Ejecuta la aplicaciÃ³n Flask y genera endpoints.txt
    - name: Run Flask App
      run: |
        export FLASK_APP=Backend
        flask run --host=0.0.0.0 --port=5000 &
      env:
        FLASK_ENV: development
    
    - name: Wait for Flask to start
      run: sleep 10

    # Verifica que endpoints.txt fue generado
    - name: Debug: Check if endpoints.txt exists
      run: |
        if [ ! -f Backend/endpoints.txt ]; then
          echo "Error: Backend/endpoints.txt not found"
          exit 1
        else
          echo "endpoints.txt found:"
          cat Backend/endpoints.txt
        fi

    # Instala Nikto
    - name: Install Nikto
      run: |
        sudo apt-get update
        sudo apt-get install -y nikto

    # Usa endpoints.txt para escanear con Nikto
    - name: Run Nikto on custom endpoints
      run: |
        while read url; do
          echo "Scanning $url"
          nikto -h "$url" >> nikto-output.txt
        done < Backend/endpoints.txt
        cat nikto-output.txt

    # Detiene Flask
    - name: Stop Flask App
      run: |
        pkill -f "flask run"

    # Guarda el reporte de Nikto
    - name: Upload Nikto Report
      uses: actions/upload-artifact@v3
      with:
        name: nikto-report
        path: nikto-output.txt
