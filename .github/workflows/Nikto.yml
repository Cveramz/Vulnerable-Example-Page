name: Nikto Analysis

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  nikto-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend/requirements.txt

      - name: Run Flask App
        run: |
          export FLASK_APP=Backend
          flask run --host=0.0.0.0 --port=5000 &
        env:
          FLASK_ENV: development

      - name: Wait for Flask to start
        run: sleep 6

      - name: List files in Backend directory
        run: |
          echo "Listing contents of Backend directory:"
          ls -la Backend

      - name: Check if endpoints.txt exists
        run: |
          echo "Checking for endpoints.txt..."
          if [ ! -f Backend/endpoints.txt ]; then
            echo "Error: Backend/endpoints.txt not found"
            echo "Current contents of Backend directory:"
            ls -la Backend
            exit 1
          else
            echo "endpoints.txt found:"
            cat Backend/endpoints.txt
          fi

      - name: Install Nikto
        run: |
          sudo apt-get update
          sudo apt-get install -y nikto

      - name: Run Nikto on custom endpoints
        run: |
          echo "Starting Nikto scan..."
          while read url; do
            echo "Scanning $url"
            # Extraer host y ruta de la URL
            host_with_port=$(echo "$url" | awk -F/ '{print $3}')
            path="/$(echo "$url" | cut -d/ -f4-)"
            # Si el path está vacío, establecerlo como "/"
            if [ -z "$path" ] || [ "$path" = "/" ]; then
              path="/"
            else
              path="/$(echo "$path" | sed 's|^/||')"
            fi
            echo "Host and port: $host_with_port, Path: $path"
            echo "Results for $url" >> nikto-output.txt
            nikto -h "$host_with_port" -root "$path" >> nikto-output.txt
            echo "----------------------------------------" >> nikto-output.txt
          done < Backend/endpoints.txt
          echo "Nikto scan completed. Results:"
          cat nikto-output.txt

      - name: Stop Flask App
        run: |
          pkill -f "flask run"

      - name: Upload Nikto Report
        uses: actions/upload-artifact@v3
        with:
          name: nikto-report
          path: nikto-output.txt
